# -*- coding: utf-8 -*-
"""Data Preprocessing Stocks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jK-DDvAOrPuT_cXgvgPCQr15LGgTcTkM
"""

import yfinance as yf
import datetime as dt

import pandas as pd
import numpy as np

startDate = dt.datetime(2007, 10, 1)
endDate = dt.datetime(2022, 12, 31)

TCS = yf.Ticker("TCS.NS")
TCS = TCS.history(start=startDate, end = endDate)

Reliance = yf.Ticker("RELIANCE.NS")
Reliance = Reliance.history(start=startDate, end = endDate)

HDFCBank = yf.Ticker("HDFCBANK.NS")
HDFCBank = HDFCBank.history(start=startDate, end = endDate)

Nifty50 = yf.Ticker("^NSEI")
Nifty50 = Nifty50.history(start=startDate, end = endDate)

Nifty50

Nifty50_full = TCS[['Close']]
Nifty50_full.columns = ['TCS']
Nifty50_full = Nifty50_full.join(Nifty50)
Nifty50_full.drop('TCS',axis=1,inplace=True)
Nifty50 = Nifty50_full.copy()
TCS_Date = TCS.index.to_list()
Nifty50_Date = Nifty50.index.to_list()
list(set(TCS_Date).difference(Nifty50_Date))

from google.colab import drive
drive.mount('/content/drive')

RepoRate = pd.read_excel('/content/drive/MyDrive/Part 3. AI and ML in Finance/Repo Rate.xlsm', sheet_name='Repo Rate')
RepoRate['Date'] = pd.to_datetime(RepoRate['Date'])
RepoRate.set_index('Date',drop=True,inplace=True)
RepoRate.info()

RepoRate_full = TCS[['Close']]
RepoRate_full.index = pd.to_datetime(RepoRate_full.index)
RepoRate_full.index = RepoRate_full.index.tz_localize(None)
RepoRate_full.columns = ['TCS']
RepoRate_full = RepoRate_full.join(RepoRate)
RepoRate_full.drop('TCS',axis=1,inplace=True)
RepoRate_full
RepoRate = RepoRate_full.copy()
TCS_Date = TCS.index.to_list()
RepoRate_Date = RepoRate.index.to_list()
list(set(TCS_Date).difference(RepoRate_Date))
RepoRate

print(TCS.shape[0])
print(Reliance.shape[0])
print(HDFCBank.shape[0])
print(Nifty50.shape[0])
print(RepoRate.shape[0])

stocks = {'TCS':TCS,'Reliance':Reliance,'HDFCBank':HDFCBank}
colnames = TCS.columns.to_list()
colnames = colnames[:5]
# print(colnames)
df = pd.DataFrame(TCS.index, columns = ['Date'])
for i in stocks.keys():
  print(i)
  for j in colnames:
    df[f'{i}_{j}'] = stocks[i][j].to_list()

df['Nifty_Close'] = Nifty50['Close'].to_list()
df['Repo_Rate'] = RepoRate['Repo_Rate'].to_list()

df = df.fillna(method = 'ffill')
df.isna().sum()

indicators = ['hbo','lbo','cbo','dc','do','dh','dl','close_7','close_14','close_30','vol_7','vol_30','vol_30',
              'hbo_7','hbo_14','hbo_30','lbo_7','lbo_14','lbo_30','cbo_7','cbo_14','cbo_30',
              'RSI', 'dNifty', 'Nifty_7', 'Nifty_14', 'Nifty_30']
df.set_index('Date',inplace=True)
df.head()

df.columns

def RSI(a,n=14):
    df = pd.DataFrame(a)
    df.columns = ['Close']
    alpha = 1.0/n
    gains = df.Close.diff()
    wins = pd.Series([x if x>=0 else 0 for x in gains])
    losses = pd.Series([0 if x>=0 else x*-1 for x in gains])
    wins_rma = wins.ewm(min_periods=n,alpha=alpha).mean()
    losses_rma = losses.ewm(min_periods=n,alpha=alpha).mean()
    rs = wins_rma/losses_rma
    RSI = 100.0 - (100.0/(1.0+rs))
    return RSI

df1 = df.copy()
for i in stocks.keys():
  df1[f'{i}_hbo'] = df1[f'{i}_High']/df1[f'{i}_Open']
  df1[f'{i}_lbo'] = df1[f'{i}_Low']/df1[f'{i}_Open']
  df1[f'{i}_cbo'] = df1[f'{i}_Close']/df1[f'{i}_Open']

  df1[f'{i}_dc'] = df1[f'{i}_Close'] - df1[f'{i}_Close'].shift(1)
  df1[f'{i}_do'] = df1[f'{i}_Open'] - df1[f'{i}_Open'].shift(1)
  df1[f'{i}_dh'] = df1[f'{i}_High'] - df1[f'{i}_High'].shift(1)
  df1[f'{i}_dl'] = df1[f'{i}_Low'] - df1[f'{i}_Low'].shift(1)

  df1[f'{i}_close_7'] = df1[f'{i}_Close'].rolling(7).mean()
  df1[f'{i}_close_14'] = df1[f'{i}_Close'].rolling(14).mean()
  df1[f'{i}_close_30'] = df1[f'{i}_Close'].rolling(30).mean()

  df1[f'{i}_volume_7'] = df1[f'{i}_Volume'].rolling(7).mean()
  df1[f'{i}_volume_14'] = df1[f'{i}_Volume'].rolling(14).mean()
  df1[f'{i}_volume_30'] = df1[f'{i}_Volume'].rolling(30).mean()

  df1[f'{i}_hbo_7'] = df1[f'{i}_hbo'].rolling(7).mean() 
  df1[f'{i}_hbo_14'] = df1[f'{i}_hbo'].rolling(14).mean() 
  df1[f'{i}_hbo_30'] = df1[f'{i}_hbo'].rolling(30).mean() 

  df1[f'{i}_lbo_7'] = df1[f'{i}_lbo'].rolling(7).mean()
  df1[f'{i}_lbo_14'] = df1[f'{i}_lbo'].rolling(14).mean()
  df1[f'{i}_lbo_30'] = df1[f'{i}_lbo'].rolling(30).mean()

  df1[f'{i}_cbo_7'] = df1[f'{i}_cbo'].rolling(7).mean()
  df1[f'{i}_cbo_14'] = df1[f'{i}_cbo'].rolling(14).mean()
  df1[f'{i}_cbo_30'] = df1[f'{i}_cbo'].rolling(30).mean()

  df1[f'{i}_RSI'] = RSI(df1[f'{i}_Close']).to_list()

# df1['HDFCBank_RSI'] = RSI(df1['HDFCBank_Close']).to_list()
# df1['HDFCBank_RSI']
# df1.tail()
df1 = df1.fillna(method = 'bfill')
df1.isna().sum()
# df1['TCS_RSI']

df1['Nifty_dc'] = df1['Nifty_Close'] - df1['Nifty_Close'].shift(1)
df1['Nifty_7'] = df1['Nifty_Close'].rolling(7).mean()
df1['Nifty_14'] = df1['Nifty_Close'].rolling(14).mean()
df1['Nifty_30'] = df1['Nifty_Close'].rolling(30).mean()

df1 = df1.fillna(method = 'bfill')
df1.isna().sum()

df = df1.copy()

df.to_csv('/content/drive/MyDrive/Part 3. AI and ML in Finance/Stocks_Data.csv')

import matplotlib.pyplot as plt
df.columns

plt.plot(df.index, df['TCS_Close'], 'r', df.index, df['Reliance_Close'], '--b', df.index, df['HDFCBank_Close'], '--g')
plt.show()

a = int(np.round(np.random.uniform(0,1)*2500,0))
b = df.iloc[a:(a+500)]
start = df.iloc[0][['TCS_Close','Reliance_Close','HDFCBank_Close']]
end = df.iloc[5][['TCS_Close','Reliance_Close','HDFCBank_Close']]
print(start)
print(end)
period_return = end/start -1
period_return[0]

len(df.columns)

import plotly.express as px
 
df = px.data.iris()
df.head()
fig = px.area(df, x="sepal_width", y="sepal_length",
            color="species",
            hover_data=['petal_width'],)
 
fig.show()

import pandas as pd
import numpy as np
a =np.array([[1,2,3,4],[5,6,7,8]])
pd.DataFrame(a.reshape(-1,1),np.tile(['TCS','Reliance','HDFC Bank','Cash'],a.shape[0]))
# np.tile(['TCS','Reliance','HDFC Bank','Cash'],(a.shape[0]))
# a.reshape(-1,1)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(df)

scaler.transform([df.iloc[3000]])[0]

import numpy as np
np.linspace(0,49,50)

